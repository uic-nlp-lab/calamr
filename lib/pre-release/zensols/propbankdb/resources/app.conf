[cli]
apps = list: ${cli_config_default:apps}, cleaner_cli, show_config_cli, app
cleanups = list: ${cli_config_default:cleanups}, cleaner_cli, show_config_cli, app, app_decorator

[import]
config_files = list:
    resource(zensols.util): resources/default.conf,
    resource(zensols.util): resources/cli.conf,
    resource(zensols.util): resources/cli-config.conf,
    resource(zensols.util): resources/cleaner.conf,
    resource(zensols.deepnlp): resources/cleaner.conf

[config_cli]
expect = False

[config_import]
references = list: default, app, package

[config_imp]
type = import
config_files = list: 
    ^{override},
    ^{config_path},
    resource(zensols.deeplearn): resources/default.conf,
    resource(zensols.deepnlp): resources/default.conf,
    resource(zensols.propbankdb): resources/default.conf,
    ^{config_path},
    resource(zensols.deeplearn): resources/obj.conf,
    resource(zensols.nlp): resources/obj.conf,
    resource(zensols.nlp): resources/component.conf,
    resource(zensols.deepnlp): resources/obj.conf,
    resource(zensols.propbankdb): resources/obj.yml,
    resource(zensols.propbankdb): resources/embed.yml,
    ^{config_path}

[app]
class_name = zensols.propbankdb.Application
db = instance: pbdb_db

[app_decorator]
class_name = zensols.cli.ActionCli
mnemonic_overrides = dict: {'search_roleset': 'ids'}
option_excludes = set: db, config_factory
option_overrides = dict: {
  'format': {'long_name': 'format', 'short_name': 'f'}}
